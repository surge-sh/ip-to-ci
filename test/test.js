/* globals describe, it */

var should = require('should')
var ipci = require('../')

describe('basic', function () {
  describe('Travis CI', function () {
    it('should return Travis CI when given a single Travis CI .com IP', function (done) {
      var result = ipci('54.172.141.90')
      should.exist(result)
      should(result).equal('Travis CI')
      should(result).not.equal('Travis')
      should(result).not.equal('Wercker CI')
      should(result).not.equal('CircleCI')
      should(result).not.equal('54.172.141.90')
      done()
    })
    it('should return Travis CI when given a single Travis CI .org IP', function (done) {
      var result = ipci('52.0.240.122')
      should.exist(result)
      should(result).equal('Travis CI')
      should(result).not.equal('Travis')
      should(result).not.equal('Wercker CI')
      should(result).not.equal('CircleCI')
      should(result).not.equal('52.0.240.122')
      done()
    })
  })
  describe('Wercker', function () {
    it('should return Wercker when given a single Wercker IP', function (done) {
      var result = ipci('54.175.201.227')
      should.exist(result)
      should(result).equal('Wercker')
      should(result).not.equal('Wercker CI')
      should(result).not.equal('Travis CI')
      should(result).not.equal('CircleCI')
      should(result).not.equal('54.175.201.227')
      done()
    })
  })
  describe('Appveyor', function () {
    it('should return Appveyor when given a single Appveyor IP', function (done) {
      var result = ipci('50.23.78.114')
      should.exist(result)
      should(result).equal('Appveyor')
      should(result).not.equal('Wercker')
      should(result).not.equal('Travis CI')
      should(result).not.equal('CircleCI')
      should(result).not.equal('50.23.78.114')
      done()
    })
    it('should return Appveyor when given a single, different Appveyor IP', function (done) {
      var result = ipci('50.23.71.180')
      should.exist(result)
      should(result).equal('Appveyor')
      should(result).not.equal('Wercker')
      should(result).not.equal('Travis CI')
      should(result).not.equal('CircleCI')
      should(result).not.equal('50.23.71.180')
      should(result).not.equal('50.23.78.114')
      done()
    })
  })
  it('should return Buildkite when given a single Buildkite IP', function (done) {
    var result = ipci('54.165.103.71')
    should.exist(result)
    should(result).equal('Buildkite')
    should(result).not.equal('Build Kite')
    should(result).not.equal('54.165.103.71')
    should(result).not.equal('Travis CI')
    should(result).not.equal('Wercker CI')
    should(result).not.equal('Travis CI')
    should(result).not.equal('CircleCI')
    done()
  })
  it('should return the IP when it doesnâ€™t match a CI service', function (done) {
    var result = ipci('216.202.261.151')
    should.exist(result)
    should(result).equal('216.202.261.151')
    should(result).not.equal('Travis CI')
    should(result).not.equal('Wercker CI')
    should(result).not.equal('Travis CI')
    should(result).not.equal('CircleCI')
    done()
  })
})
